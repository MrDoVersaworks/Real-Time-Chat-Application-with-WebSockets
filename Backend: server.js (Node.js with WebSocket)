const express = require('express');
const http = require('http');
const WebSocket = require('ws');
const jwt = require('jsonwebtoken');

const app = express();
const server = http.createServer(app);
const wss = new WebSocket.Server({ server });

app.use(express.json());

const verifyToken = (req, res, next) => {
    const token = req.headers['authorization'];
    if (!token) return res.status(403).send('Token is required');
    jwt.verify(token, 'your-jwt-secret', (err, decoded) => {
        if (err) return res.status(500).send('Failed to authenticate token');
        req.userId = decoded.id;
        next();
    });
};

wss.on('connection', (ws) => {
    ws.on('message', (message) => {
        console.log('received: %s', message);
        // Broadcast to all clients
        wss.clients.forEach((client) => {
            if (client.readyState === WebSocket.OPEN) {
                client.send(message);
            }
        });
    });
});

app.post('/api/login', (req, res) => {
    const { username, password } = req.body;
    // Here, you would authenticate against a database
    if (username === 'admin' && password === 'password') {
        const token = jwt.sign({ id: '12345' }, 'your-jwt-secret');
        res.json({ token });
    } else {
        res.status(401).send('Invalid credentials');
    }
});

server.listen(5000, () => {
    console.log('Server running on http://localhost:5000');
});
